(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     67264,       1249]
NotebookOptionsPosition[     66935,       1232]
NotebookOutlinePosition[     67290,       1248]
CellTagsIndexPosition[     67247,       1245]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"k_", ",", "n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "1", ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "/", "k"}], ")"}], "^", "n"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"PowerRange", "[", 
    RowBox[{"1", ",", "16", ",", "2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ex", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "#", ",", "x"}], "]"}], "&"}], "/@", "r"}]}], 
  ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{"ex", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"Automatic", ",", "r", ",", 
      RowBox[{"LegendLabel", "\[Rule]", "\"\<n\>\""}]}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<[S])\>\"", ",", "\"\<dP/dt\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.681561232133458*^9, 3.681561232134602*^9}, {
  3.681561306104985*^9, 3.6815613118031588`*^9}, {3.681561355908132*^9, 
  3.681561410586422*^9}, {3.681561980519415*^9, 3.681561984751116*^9}, {
  3.681562188870364*^9, 3.681562190628628*^9}, {3.681802464030469*^9, 
  3.68180246915438*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVzn8803kcwHFGmOErnR/rlNXtelxK9VCRS70/neSUdedXk0en2qJiXT93
3eruOvnRdbKjPBJmR370y8Mw4krMUXyXYZvZaNg0KmRNfnSO7bo/Xo/nv68V
jJNhsQQzMzPax/53d+xrqegNe/utX9Z2m0x6eFW+jzFIjoC7MSzfmWk9uJAU
XCH5CMxO1esmx/Swzu+TknzyOZgjzS0yKfXwZdfGiuvkZLhCZTYertCDKK95
czo5C4LoqcQQhh6SEtN+/J1cDFJnfkC6eAKOnNOTr5KrYbedfW3hg7dgkxVc
+M7QAtyjHK7lr2NQ2+UdFLS8EwRqOnP0yRuISlL3Nad1wxehS5Zs8XsNJyvP
et2a6gVX2jnh3pYRmMzoaTM3H4RYqaAymzsMbU3PGjv9h8DzdLrWhaGD45xg
+/3jOsjv67wdvP8lNBG9TWUnXkFHUq9PPGcISotajEs/H4Xl8XNubJ4WkMuT
2+Hl43BPoDlJ1GjAq1Vd98xTD/zAwh0EHw10o/CJexPvgJU8V+HqNggs2wSZ
YsMkTPawC8jv++G5iv7EgfseMmqtDRPtagjfFaXV6aZAaKw5tLfpBfgUpNEL
qDNgqRemlqr6QGO80X3s0iwEcNZKDOO9MBzcWeTS/AF8Lv+lWeLRCxU5gxzp
ijlwelbsPUVTQclvFldXX/gXLqSW3GenK2GaGT0a93geFkVd5YbqeoC0MzWs
0tUIgrdPiXTfHvjJcdhOe8AE8+XruB18Bdg1rDFT0swQ6UQ2ibBYAdt++Gah
ec4MLRQHja651A284mtFn/HMkTwqK9rSKIeYyE0S4h4CYlFtlNYcOdQoYm80
zBDQeamXm/WCDPzaKwgjNy2Qu2MfTcKVASUwbvrGTktEibb9tM1dBps3bc6s
HrFEs9gqN69aKQxOpuNFKYtQr2bguoQuhfGNoSlkbyu0lmp0EE11waoxr1Fz
uRVqensnz5/XBS1UtuxUojVaV0XBA1EX/NGtYIZRbZDKq+1Oz4tO0IeLMgkt
NihhK8OUiTqhKtI5wO80ER2fbPAW8jugSJKUP+Rki3r29ctY9h0w23rgotPf
tshQ2pg9xZaAJrNx2vF7EvrgtJv2bqQdZqRbyZcd7NBtPIMSGdcOp7JWijj1
dihYVKNVDj4HV8lKR12MPRqLAAdh3HMIV5TNuxvtUcThkfD+92KYPFjIUt93
QFaqvIWzF8XQeEiQ4hCCIcaZKyqZgxgedbL2DOzFkFVATdW0nRgebvdcXB6K
oYRoitSNJIYy9xIejY6hPOXZvoPWYshV5QqvMTCUFnJ+mcGEA/vbVK0tB0Mm
iW8UxYDDGvTdNutSDA0712ytlOOwSrDUQnkXQ0xKYqJaisPK5aq20gcYavVo
INp04eA2HxaxqxJDUUlh2oPtOFjVfZ2QUo+h0aPRD5ye4qBdvynHQo4hX+sC
fvJDHNR8Q4xcgSH/yGHL6mocVPYCapEKQxk/Py57WYVDx9jqiq8GMMTTDIkC
BDjU3/FoTXyDoRBm7j9Wd3Goc+m/Fjr+8efFUPyWUhyEKblhK/QY8sylLYsv
xuE+03lANIUh5VhYYEcBDiUyWVHGLIbO2Mgemf2JQ8GOjOOH5jBEueR/emM+
DrwK2voNCxg6wk8+FpeHQ7YHadpkwtDNOl5BTg4O/wF3umKe
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
lz8=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwd13c8Ve8fAPDr2vMaKZXskIhEpLqfJ0XZuygzUvGVVUrKSGQlhagkQrIy
QiWb7L1lb1nX3uN37u/+ce/r/Tqv87zueZ7POvw37XVv4XE4XDT2Rf5VvTXZ
XPzvARH3/888eHsFPgo4GA/Pz+xhHxJY3Scd9D+YDbo+Z/7vv1OUvG0tufDY
umeHbC0LLiHeoF+QSfi5SXZA1Ocv5ZN5MJi4t0Z2eaf4MRulfHgcxLtM9s0V
x6n8pXx40xG7QPYe+48UwucCqKXJmiM7Smr7v5vahUBghGmyFTQvnMjZLYSH
BbITZNP1jQT3GxTBNZ7FUbI7bX1JtGlF8CvTc5hsvaf7vnLhi0HBun+A7Lzy
W4ZpEsXAukfbR7YA0w86RaNiOMO+2U22vx7dr47nxfCQJrODbMPh5IO43mJg
kDVtJLvo2HZ1GG0J3CCq15It7Kjx+NipEjAvnasgO/hntFihaQmc4b5QSvbK
HumvbkAJFNgQC8g2vnwhcCKnBPZeDv34/34Evzn7ZKgE+oSOZpH95ohsVIJ8
KVxpdUkge9PKV13BqhSmax5Fk22R2rnd8KoU2ubxEWRXLYmmWf4uhfQHLK/I
ljr72GR9vBSuyYf5kh3xrJb5JXsZtJUGPSV7t5q7kJ9YBrKX553Jrjcs4lEL
L4OvCp2mZMvEsDYOFJdBsryK3v/3f8LC4/5MGby6THmZbErJ75L0XOUQm751
hmwbF6rBjxfL4Y26qDjZLQUGIdL25VDi736E7DPUiajyfTkYmS4x//+8wlRi
5xfKIVeDYWYX85b80FbsoT9wzq39L9lzfY+u6l38A/dPZlWR3SrylTE37A8I
DTrHkl1RB9a3C/5A88cLQWT/dOws5hr/A3R3Fh+QHf2bxsVNrgLYCqqVyH5t
Ht0kbl4BmVbtx8l+Tn36eL9fBdxQC2Yl+67WrUH0twI6nte175DPZ3lbYRFf
Cd+6pXPJ1nwXFh53vBJa79KFky0zUqZK87QSvJgKNMgW8buR8COhEjL8H4mQ
fUhiae9OQyUwEoz3tsnx7CKQU8tbBcrcGklkLx7OIzy9UgXc8yfdyB4t1rE5
4VgFTddnVcmuYfDifV1aBfp/g0e2MBekcz1WnK6CL/7KqWRn6Ge0LXFUw+rm
Qyeyw6MH/K/eqobchuHVTcx+Fx+O0gZXQ7DbRDbZjydZ4FduNXjc37Yn21ya
uHyYrgbG/hvt3SDnR2e7Zr1UDVz77RZMtvITuyR3oxq4OplyjuzjFVGmQ8k1
4M9iELyOmcdW5teb1hoo/BxwkmxW1jqOS9s1cBBamtYwrxptVX3RqAUaNWpK
sv/tvhE0dKmFQz3x4auYe+PE3Ok/1QJdYqEg2SWzRqf+m68Ft7f5J7FcgSCv
nx9PhtZBKDsv6xJmD2Ht9eHfdeCf3u66iNmpdkI3bLQOdJU/9i1gvsZ5gG5N
th5WHr9+M49ZNe/bza+m9XDipd4ICfM5M+UCoxf18NVRR4JsgaQHTvld9fB6
/+HUWcz7NJnr7SgaIPOIw+AMZtqleBFesQagdOZgJnvmXFuvl1sDlL5V0pzC
/KNJ+vJlnka4Xbd5Z5yc7/9mrogrN8IX9SGTMczW+ERVtnuNsFykrjKKeb/M
Yc2egkagqwnAD5PjW71dq3isEd4NljcOYh7JqvzaQtMETR26bwYw/671Sv5x
ogmG+YVWe8nx1WV6PFmxCfS0i972YA4dPZsadbUJbHZMjv/FbLuzkubl3gT4
EKJkJ+bDkjaZag1NcKuOGNGE2ffsZWnicBO0xOTWN5Dj77LQd6nVJvjHdmyl
jhxv5v3ZnDzNcNldnbMa82m737J00s1A8uVhrsT82TUyd1OpGWQlJZbLyfH0
RvfngF0zWBUeDS7GPB4teabFqxlYXx1GhZh1U5jyysObIf/XrYHfmMXKK34n
FTTDNOv8SC65X6woFDkzt4BPEc1qCjne8FzImr8FhNp7KZMwZ7GsFBvKtsAO
b8pmArl/iKSXnjdpgR9uFTGfyPXfSLCCNq0FLpy8WvAa85dbuMubxS1Qq3iT
Ihgzu1Nf5UxbC9hfPHMsAPNUQER183YLmM3/x/8M87t8xvoP6q1A07nvkwNm
qupJjWDzVuCZ/T1ji9mh/U+D5/1W4DJh47qN+cqcR9OtqFZ4P2hDZYJ5nXe5
VXKmFVaf3Th8mdwPxZv1BXBt0JDHSbyAuUn+W/u+fW3gdUhH7izmrzp3OjfO
tsH43o2kE+R+4t37tyywDcZ0+Ow5yPkzKCx+O7YN0gW1/RkxV59zfMrwow2q
rTPvUJKfd5WaT2e4Df7uE3Nc3MXO967krX75dqC8fdy9HnPbH9dcL812kDqk
G1GGOUignPaoVTvELPLc/YV5u8cw2fZVO8j5V0rGY+7XfEZaH2uHmhaxAy6Y
36bUoaitdpC4EVZ2F7MW3YE3wNYBHryLB00wF5ekyPie64AED/d8RcyxMu2u
HKEdMLBlEE2P+fpr3trcrx0gXMhrvrmD7f/cXe7rhR2QmJifN4X5WeJuYcy/
DjD35jxZg9nqkCjVCdQJcbM6/d6YuR86GTQbdII8HUHQEXN7a/6X+7adcK2i
aMYEs/JLHZXfbzshyf0Y1WnMIji34CuznXA7Mnx5YJsEg8Z/BqbxXTBsm89e
jTnyF+HkK64u0Ekajs7ETOcc39p+sQu6j+Use2KeGqvnsnzfBVd/E85xYf6s
yGVDk9EFycYnHLa3sOf5dPN30p8umJ4YWxvAXGu4ZjI/3wXxm01L8ZhTa/ni
nl7uhuTUbVlhzFaitst8Jt2gIZX1iQrzEZ8cpXKnbpAqKSUOb2L1gag6yRDd
DcS590wfMNtnOktELnfDfGavAx7z3Lmh1mq6v9BlWVnVu0GC/6o0H29x/4Xb
dnd0czHfGThWaar0F74FZ01bYzZnHjQ/+vYvHDjqUl2wjp1npAbtteS/YBnt
o/gas7HQ7zS/wr9Q+CG03hKz4dm3m9Pjf+GpTSodDWbtu+phWXI94C9tGElc
I0HD8i+FUbUeMODTEmHArO4pMsRp3gNOv2Li21ax+I/An3D164GN3YvXrDGj
Pz8robsHfHKVOZ6sYPMG/9Gtuse9EJ4UZ/7fEgm+pb6J3Q3uBabPJ+4LYRaX
x12RiuuFDN9X/D2LJBDV6gkLre0FXVUW6UuY+Z6+PnGduw/utB7woFrA+jfd
XlugVB8IZK7mZsxj8RH2n1vBpT640Uxx7QZmrpTLVXx2fcD7TTInhUQCtu4d
i4mCPjAIohOXnyNBiJUt3cGWPtBWxU12zJKAZb7rm+p4H8h/2WlzxsxAm72V
xtIPx/7mC32dIQFe1ib8vlk/6NwjVW1MYfUxpKOKgmIAtG9kgsIECfL/y4TR
/QPgzOTvkDZOghdXgnIrxAfgcGbLvyOYuXGK8YGGA5DqcMpvdZQESvZpHpwZ
A5DYxSDhM4zlt5rf6tqfAdgXee3G0BBW/4Qt7f72DICgCqezAmY5+6C0RspB
cPFxEB8ZIEGdsOKHMMlBoCB4GTP3kSAzLL3DR2EQlmuu2Gn1YvmKP8L+UGkQ
Ro5b7r7swebB/jU/oxuDsBDUfRf3F+u/4WkuPC8GgcVAtuNnB7a/1Ad1v/YP
gnIZLNs0koDa2fflu3+DoHlaWvheA5YPg0tVAcuDMHyef+y/ehLk5DeAHcMQ
BDzPqjCuxfrp/ecS0qeHYLufUY6qkgSSwwt3BC8MQeNo9PzQH6x/apvF71Mf
gqumMSl55SQYOK5weM1iCMrn7vYal5Lg/giJLv/lEKAQscM3C0hgpGNyKS0S
u780sZUznwTEohqP6Lgh+NSnuFKWRwL6Dwmrnr+G4DxviSDhJxYPujdGlcaG
QPXpxwXTLGzeLakoajw3DDV+Tb+bE7D6X7c9+vLyMFAw7BcQiyeBT6c0g7ru
MIRqUXe7fSaB4my0ftXtYXjSShhk+ISdJ9fDf8VvhsFJ2L+7LYIE7wXTWDw+
DsN39gsaK+EkcD0xcur812GQs/l4nSUM64eXtNx/FQyD9/664WMh2PxlL8KR
NTkMrflUFFR+WH4/NpF3WBqGyDyjD+M+JLDzCTU5sTsMVG0LDCXeWP/7sJeY
zDECh7UKKU08SBBf0XkujjgCEzmNz0+4YPXqiJ91WNgIDFyMM+G7SQIX0cJA
3U8jMF4oMOpsRgKDU8sZrMkj0EZF9arAGKuvKuZbQUUjQDPh0S99Dav39+VD
fKZGwGFV4uRnNRJ41k7+ckGjsMiZbO0qTQLTDp4BGbVReHju30V+SRKcH9Kn
WjIYBW9XUYuC49j7xWqxpr3tKDb37fY0C2HnJfBu5PbbURCgjlO7sx+bj11V
mI1msPUSb6udWJuD5MNsJqaroxB/49QT3aU5mCnoSrXEjYG3Vc1XG9Ic3MPf
Ub+3bwxwnYk+LhNzcD/QN9D73BhYljUpbHTMgcfHMvpvQWNg8M3x2+vvc1AM
gUbf347BPz1Vg8lvc4Af1k36GYNdDxSXPJk8B8+Fh6+UZY+BG4cD7buYOQhI
x/l19Y7Bsu6+A4VBcxBecp6GUmIchnbocJduzkGHJfVVOrlxMGb7dzDDeA64
aOoTmC+Mw/nrf0OYrs3Be1VjJS6DcRiZOMn3Vm0OYlofP5d4Og5TLUMvJ0/N
QcrYD7xh/Ti09XuwOVLMQQm99F6q3QTI6YcdufJqFkT1pX4EPJoAYZ8HWQO+
sxASfcL+jvcEvIsRyzN3nwXzU8cHBN9NQBGdeDSP3SzsGgsVvS+fgKUbLSd8
VWZBIWO/h9/hSeBTrlf5tzMDnzf3yVkLT4LZZVc1+uUZoFfiIF08OQnhYTnd
rFMz0NVNMNtTnoRe02mpjvYZeEhJDy5Ok2Ab+nzjdOoMZF/d2rWsnoTp2mbJ
c/ozwB27kXuhbRJO37Pyr74yA97Ta/d4BybhoFob/vz5GdD1XO7/uzwJvAw2
hI6jMzCfNFuow/cPHmaM1zWsTIPEzoA7PPwHc7emRBpDpuFLXPnuoaNTMPrQ
O6EzawocfPSHQHIKHnWuW7MlTMHZ26NlVmemIO6HDpVMxBQ0iVH5f9OYAs7E
ioVTblOwkXmRQ9FlCiIO0UbxKk6BenGpyN3KKRAqoezJqP0HS73F2j/uTkNS
II+oQsMkoP0Fn/W+zQDXcEK7T8Q4UIVz2iv9nIHpY00bbD7jUMVx76xc6Qyc
9f6b+MppHLTYeNsOdczA/g1vF3ONcTBl8qIexva1nV660QQ/Dm54pTsOGrMw
yxr0ef3uGOTO1Um8nJkF74dlmVonR0GisvdnhRiWJylcix7fhmD/nO1siCwJ
NgYF5CKwOoXj3OK/gUhwNKCAMuPZELTdPBhIMsDmxpUFt4mrQ/Bk18CEywvr
6yn4Rpe9QaiTbaSw6SRBKUFr1FhnEGRbzBNoFOex90fzsh/LfdCG9OaS5ubh
g6PEZ6OBLtj8NPIxa2keTPbv7CP+7gL+PWeN3+vz2BGMpqOILrhXEJZah18A
GhFlvVitLqBV6LAh7V+Aa0GcBR0lnaBwymhCBhZgjVSjdSG1A2KOmg0WvVqA
s7/k1DXet0HFc9KrqrAFSPynk2XwuA1mRzyg+d0CcDy/5e91vQ0UPsdED8ct
wBLd3dGLh9uglWfYmPrnAtgYtvg+iMbmZK5b3aqDC/D0x0Lz+5QW+I/BtqVd
ahGIWzlm4kNN8KVgf67q6UW4UTfOZF/WBAMOpe+Kzi7CvlaxB70JTaDbedAi
SXkRAr+368jZNoF8fBXpifEi8Ptt7HaSGoGKKMws5LcIN+/MqftJN0CU49Bl
p4FF+KGzKiu7WgMdQi+PT4wuAltcPRL8UwOELnmC8dQinCzQP2YRVgPPiCEd
SiuL8NpwxLv2VA3cYYRbBxmXQKTzyC9dl2qQSYh6Vnx6CWpODY5P0VdBbde1
ApbgJdDKiG48cPcPPPs7wWkTugRWT/pwIop/QL734b0/kUtQOtn50vXwH4gf
iOB9ErcEkbLtNhMN5fBkvNPr388lEDvZPN8rXw4Sy9eUy0eWgGs1+8EoVxm8
Ihg2up5ZBo7zT9fpaEtAmW1SpJ24DPq6ui/7Jophm/2Rp9SlZSg3fZ83VVUM
d/ZHnpzQXAYPWnbftMBiQEe6QvWtlkFT5/uTWo5iWBAzNJR8tQy70UFvzxkX
gp6y4dDo6DJ0ZnrsJbH9hjyOk40j/5bBHfXWPh/JA4Eh+oLhuWUoKMrDZeTk
waLb78jB9WWs+XvHr1zPg5BMHu1ephXgHfu+KJn0C+q4xwpbZVbg0yLv2SW9
n3BpyTGq9PkKpFsJHrUayIHUYtWAEv8VkNIarjLJywGOYMFHxcErEK9Z0BoZ
ngPDou16hZErYDhMYdmsngOepvKMeakr8DR51woVZkNB9a5rZtsKeD6rzP+R
+h1OxwReixFahXMl6SVyOZmQUeLhyii2CiuePVfZwzPh+IjzBxfJVXi6uFMp
9iAT+ISNB9QVVuHwarYVx+lMYEwVv72htQpeL7KLc/MyYPBHvYuu2yp8H7oZ
XP4xHW50l0QWeK6Ce/+j29VW6dCxmZMn6rsKzkkFvWfF06H2fPTubsgqrDay
qFjnf4Pcsnu+KV9WISh57HTeUBoENhLeUrWsQn2Ra3AKpALNAuVP+07s/+VP
OB1jTgVP9vXuv72rwGr4RpOuJwVcDAaPZE6sAmX19aWxhylg3pORYLKzCmUt
9feZcpPh9IROTq7oGtwj3KiyvpgEg7uhbXc81uD6vkuUkR+/ANNMU+DD52vg
uHT1reejLyDfzXzR138NXlzK4knR+wIh319kxoWugfsLJpFyhi+A7rgF9yeu
wSX9tZl1twSIbb55Rb9pDfDL8pU0NvFwM/5kPvCvw6UnXiLJjp8h+PU9Z03h
dSAE1/ov632GPPcUMZPj61DKXirufPozsBsdffdYdh3cWgUyGbdjoYz5oEuO
yjq0t+xX/OQfC0IPcVLHndaBqZGgsJcWA2MqjXH7y9bBN53+2wPpaBAKFHn1
umodKhp6rpftfgSrOo/HTA3r4EEzfdKp9iMMa0rp4LvXYbh4V3/+1kfo13u9
Ozu3Dl23P3sZfYqCLhM9oz+HNkBQMw9/XvAD1Dh2stx32gDuXpdxT5tIoP8u
uTn3cAPMop4QIi5EwpXlF2N3n27A5VrrznWuSKh0kc8389sAOdFf01FVEVDu
9u6uWvQGUJ6Nxl07HgEFPjfKBWo2YNQ93p9zNxwy3g24NvNvwkpOlRpTeyj8
d4z7r7TIJvz78OAyX04oiP4yVAgT34TBWNWjduGh8KmrefOq3CYsL5s3p18N
heAD5W696tj9izr89T1vwC7869OJh5vgzue+j2n+NYi9dvTaqd+EsqjZncnz
ITDO923ItHUT5g1owvWFQuBzxtSF4q5N+D52anyGIQQONVnivUc2QTHYouJS
5iugJ1z1ptvA1o91uiw5EwyTQQo+HEJbcCJf0avK8SUk+FH6H3u8Bc/Eb5X2
/ggA9lE/9xMeW8BbsK3l9DoAPIHl/qnnW5BUFaCvZBsA11e5zM4Hb8EvnirO
z7wBQLA6IavzeQve9zJOiwX6gysYDT2q2YIQmbJ5Xjs/0Fj9dqbq0DYwv9tZ
mjXyhTwdGcl63m2orLbJdlDwBdG0X0ItQtsQdOzapNBhX8BblRN6T2zD3xq+
a3x9PvCjuXuMpLgNUTeLj1239AH+NKo3B2y3QVNe2OLNo+ewYnl9yvr3Nny3
bWxfL3sGLhxbHF3F24DP6ukdSXwGq6UfzqtUbMN85FLtTiBm/r6Q483bUFC8
zlCg/wzWB8zk5se3gZAn0GA26QWbN249d2XfAYbs+DdzB7wAp+/AE3R3Bx6v
2wwKiXuAJyXblZ17O9B69h6V5647UHzPdLx3fwemzZ52H212Bzz7Urm2xw58
NDjorvXQHSibHthyhu+AdvKb80yVT4FG3e1ndPEOUDIEnP7t/AQYL/nqZh7Y
BYGXZk8/7rrCuSJ7tgruXSAuSNa29rjCPQWjpr/8u5B1+cEJ4i9XaJES16QS
3wWe5yb9afdd4f2RFpVraBeO0eLiSbOPQHTtyIWdO7twusojK/vfQ7iUnCOp
krcLVQwxdvxULuBy9NOcSdEu8Hscp4KJB/A1xi/NqXwXTuUC3YuaB8AYceN4
VMMuPP/pqxz++gG0eFOIkIZ3gYbbTSaO/wGYm2jwhDPuwbVv+TxqKvfhCesY
05DxHtAyz7jsy3ECsb9ZqNdiD/S4v065fXSC7jjP+53We/BFRzWXytcJTstx
99Y77AHxmpeP6zUnmDfRS8l7vgcbqhl3prYcwTKlRCUsdQ98oqy9C1QdQVU5
2vfy9h74fcj7+2PHHrZpT5vE4nAoMXlfH2+HPbTNcK/xUOIQT4VCfeE3e3iW
OyV2iA6HQjVihWPM7aFfxfcNKzsOmbDYJk9U3INIhwKLnaM4ZFBw8fDFj3bA
VHgc16mBQ+W704kEe1uYVefLDtDGoY3veq+nVG2hoWffHaIeDi3ORA5tCtvC
q42dxgRDHNYdja/nDdgAu2zTp/uWOETY276comcDXKn3gd0Vh/ZzivYyKt0F
ofcF7hrxOERjNpXzQe02UB/LkqZIxKH0EeMoH4nbMP7jy3h2Eg51qdAe+kC4
DYntrzS503FIpW6l7HKbNYix3eSZ/oVD1p0OajFm1iDlR1Po14hDWx/kH3G4
34LzLlo7ZZs4VDpdQHepyxJWbSbdVHZwSMMJTTcUW0KGmddmwx4O3Qnunn6U
ZAkCKt/XuqkoUJZ+TcgxN0ug4z6wSGKhQJ9Iq27rvJbQVtI/fliQAknfOq8v
bH8T/mO+1+SsRoHu/OvY/iBgAcJ4Wq0NDQpkLlNh8YPFAgZWP9W7a1Og11Yu
32c2zUF3sLnG34ACOYknvIhvNQf577J/PplRoPmHk/8u+ZoDldHOr1pnCvSd
KMuqO2gGUfFBcYJRFKjvR82hwykmYHbx1LmBaAp0uqXH38HXBASGu9vex1Ig
Taan3esWJvCVV4SGPZECDffvG445aALZ70vu4LIo0Kn2X2LKgcZQF7Iq0VdJ
gcqZTBriHt6AnSfmP98uUSBm0Y+Hc52MoPgwrY7uKrY+45eAbj0jeJ6X9o95
gwLp6V2hEJE1Aob1zUM+uxTI8sseLawbwn7n8KfO9Hi0MRcab+xpCCfu1ihq
8+LRUeOQ71yR18DUQKaeXg2P5IOi1rZHDMD8sEbMTw08cs9LcLldYwAWQ7ec
b2vjEVvWpcClDAOwsos4+McAj6biWbPs3Q3grs/mLU9zPMosss1YPGQA93OK
d1cf4NEEleb5TSN9CODUkBqNwaPLZmNTbXO6ENRzizI0Do9UCBQMB7t14WWs
e8eFL3i0J8Ym5VqmCyESGU8+peBRe872fFCkLoQrcVRfz8UjmynxpZ2LuhDz
oNuiuRaPzrTPiI1+0oGc9luhhat4xHqzHVdkow0hFIInYQOPtvo8mVyNtMFG
YrChaAuPYgSjvC9f0QYen+sMJThKdNFHUoVfWBt8ZbS8yhgokZUW64eAP1pw
NVTevoqHEj1u1hd1LNKENW1GtRZlSpSfcvb9uUZ1aHlSNamrQokyl1Vu3s1U
h9SvPr6tapRofVKh92eoOpjjcKVt2pToU96MdJGhOlSlL8t3XqdETHaO4Vaj
ahDJ0i/ce48S7Y9YuDJDoQZn6jLw428p0RHKPsc6fRXg/uyWF/WOEo2ZaqQ1
yasA7pGyk14UJTKwykhY41aBKsHeoeJYSiRgJceSNnYFrrrRlnxIpUSaPeZh
GY+ugJOYqYdOKSX6feYf02L8ZUj1Y9zOn6VEoWr+msc4lSHEtOO78zwlunyo
OkNiRwmcZWJtxZYoUSx3uKHWmBIoDJ7uiVinRHStj//+y1GCarmbeU6UVMiM
atbsoaESjI//fCR6kAoNXVRdaPl8CfiUrFdCL1GhbwEtHoFqF6HXs/0h92Uq
5H2dU1RT/iJE5l/ajFehQsuWZ8yFj14ENhnBvRxNKiS+SMV5YE8R8IKDdF2G
VOgAvjh59bsijOGuc3PbUSEj+9K6CH5FSM7XuBgfToVWxEskvjNeAOv1/D/i
kVSowTjZZ3UTgaCM+JWc91TI9KnBVfUpBFEpDBoVnzDPBNNKViN4+b7y6mQS
FfpN4SbX8AKBw6MLNuKFVOjTbb5oczoEsjKyr7PHqRCdmOmgtzgRpCL2a0r9
o0LFA9bakwQiiG2uMaROUyG/Havztkvnga8473ncPBWK8pLYrc07Dwzq6NGb
TSqkL/pWZkX1PAxaqpk5sFAjvSmFrkqHcxAQaiEhfpoaKR0WFHvWrADPVxWn
EuWp0V6XVonzTwXwMBJKFDxLjZJGjJI8PinAfd4JvsOIGrG/ub8wZqcAZin/
7WNQpUY1PddY/zEqgEzZw60JE2p0KcvVLV39DAwsvqyO86FGHBxnFO4PysHo
3pMYAz9qJGP60exdlRxMMv33kDaQGqU+TtDqzpCDeWHVo7Yh2HXvUwxJXnKA
u0HjJf2BGmVGK2g8F5IDgTJ3+ZIMauTZwlHAbH8arEPtE/t7qFG+683kN/tl
wSbG1D2knxp9jFEuaqWQhXtpGgaKQ9To6Muvf47PysDDyuOUX8apEds9s9N8
5TLgtzVhardAjZZ4T0YdcJaBJEvz/ds0NOixTE+EaPspmDml43NQmgZZUyy9
P5wkDdVfRoU/ytCgUCtpt3OR0vDl4KMqPjka1NX9w+veC2kw34tmFD1Hg9bn
FLOpraWhtWbm9WllGpTipB+xKygNeRZ+0XrXadDGzoVh+riT4P+q6MfLZzTo
iNbFD7RpUmCN1zNi86FBDHwZz49FS4Hig/HNsBc0KP6wvMH1V1KwfZ2ZGBVE
gzItrt6ddJQCB+Eb5clvaRD9mNmbbDkpMCxYbapMpkFOmlXvdwIlQXhaYoqi
lQYZ3bRj6u2WACa6xoTf7TQoWa7l250CCVgScrB40EWDVvij6jliJaDYNKtr
so8Gnal/TCq/IwHXW05XNk7SIOWgB13BG+IQ/AviP+7SoK85yw8/84nDygsd
0zNitOhBFGGwx1sMeuMXDy6J06L8pXvnVmzEoLQktD1VkhZVKIaMiOqKQfBW
uzqfLC1KP7nytp9PDETtr5+lRbTIQHTpnGfRMTC+asnVbkCL1sYdrj+jOAbl
Qg9aHLxoUegS7amfESLgnZhnuO1NiywPtYXreYuAohhu4IUvLYopcKrB24tA
iWTgdHQgLRrKzNKLUhaBQoVYqvpwWlTs/jr816ow/NCuP30smRb5Us1+Drgu
DMlPjn4YaqFFtfTaspuSR+FVW7ulrhAdUjowxrTMLAhB7i+FmoXpkHblxRKF
XQEIEFUa0zpGh9Ky3zGFzAmAz5Nsa40TdGg9+5C4daMAuAmF3r0iT4fEZLJm
C18LwO372vZEdTq0Y7ubwnlQAGBf7WOx+3TIJyt2dvkkP5wrfHY2yYUOdVfr
fFoU5AeFOwrbIq50CA8Wwjuc/CCbn/T0qDsdejbv7Cm/yQfHrfw8+fzo0L4p
u03lMj44kK3kuz+KDt2Max/9cY0PSHrFr/HldCgXr1gnzMELq4k+//2ooEMW
N61ZGdZ5YHdL9fJ/1VhhKU2Ype3jAab49u32Bjpkbpuxp5vIA6LLU7eTuukQ
nRCvmeB5HjAP4yRqk+jQNVchqzC7I9DUZjP18RA9ynWnZt4YPAxZBpwXzzjS
o4+4qUAi00F4Q/CYLHKmR4JE3oWb61zgVD35UtmFHnkHqjC8G+WCk+fzu/Tc
6NG0yAN2hQIuyBCyvHfPhx7dctsfpmHPBd+WMt7FvaNHRwoN7qZ0HIDk1+rz
zKX06FD5xpOGzP0QV+/9cZidAeUVmX1Xe7sPgk5uGX/iZECLJ/8M0fvsA5dw
J25jLgZEwWyo3+W8D66YWHxoP8KA4l/slCTo7IO5GeK7KlEGxKqjPYFj2Qfy
TJth34gMaOelYXeSPwfUqzoEPbZhQH/uTgtfDWKHtUpjN/ZSBvRWcsCo6Tcr
8OgpPygtZ0ANZoW/rb6xgnK/pL1TJQPSzaOTp45lhbfLeMuWOgbUMX9Py8aX
FWT4k1TfdDIgI0+jpDIdVnB6vHKQfZYBSVjnWOu0E2BGPPgnGxcjShJ5zt6l
wgKDr4tWWO8xIvncUz3bjoww+Ewj740DI9JKenJj2YQRhpx73Pc5M6LWo+4a
2yqMMGywRsv1iBFFoFLV8wKMMHJQ8hDvM0Y0HXaG4VkrA4zHRhMl3jKiMpOv
dfRnGGA68+kLlUJGZHTEsekbgR5Wm88efMbChDykBvjNJmkAZ9e5doaNCcnR
CJckdNAAA51zxwIHE9phVK3bKqcBHmJyqMVBJuST/HGqPZYGlJK5WC4IMaGv
JLZkZEwDYc9W8DgFJuSJeJ6MtFLDqVPpM09vMaGAYMc/W/VU4BAmUOyaz4Rc
9Sg+hEzhQTf85l3KIuz+Or56+T48yL79zP6yhAmxZLaGTTfiYTNC4FZMBRMS
KE0vcsjBg88HAYbKJiakgTfxXPfEw/vPAvr7xphQ6/bL7ysH8VCeITD5jZkZ
/WGp6LyjRwEH6gVYR02ZkcLbf5G/yveI8ittS+YWzIhzL3xYIX2PaHjkRWef
JTOafWb5ou7dHvG93XR05x1mVBsqmMJnv0fkYcmWqHViRmKO2j0Bh/aIwlpK
alm+zOjI4Fu6G/d3ibLNt309vzGjkexV++BTO0S99tRt7l1mNKPhWeHbt0l0
T/xvsxHHguTx4ZJyNZvEr67i688oWdChW+0ya7mbxO0jqUuTdCxoObizJyFk
k/jFOmUqm4MF8d/r3o+NJsTNtaQu9WMsKFDghFJx+gbx86HE7Cf6LGj6lIlJ
Tcg6cdEs9r/eZBZ04TFXxNEnq8SVCGpZizQWtMcwLnLLbpW43nh3ZyydBe2Y
s31IN10l7oF0MCkbW8+qh+rWhVUiE19ZOr6IBZXYOs9p064Sjw6OLoq2sqCK
IuMHR8NXiIbmoq4PtljQz9qpcp+fy8Qi83QfFnUCKk97L2XGvUTMa/xPrV+T
gNqSdLK/siwRc4libN90CIj1aM2VHdwSMZU7IUrjGgFtF5o8qRxbJL7vev89
6CYBFYWXbfanLxIfaPsOMbgSkMu5tG425UXicWRynvYLAQVnmcooPV4gCqcf
ouz8SkCyeyPa/XYLRAGerqovKQSE0tZ1vSwWiFzbuvrKmQQUa1A6OnplgUjz
84qtTz4BsWTrqvFzLRCHJGXeUbYSUExdZ9ztn/PE3ugF09Z2AsqgECF8SJ0n
djGnC8V1EZCK/vvOzph5YsP0sQzFfgJSslwwtfOfJ+Yn8lZ6/SOg8YqzN2lv
zBN/7u8L0pkhoGY2zebnWvPE7z7vdflJBHT7z3VjxkvzxGRLzv7iZQI6EWD5
5ZTEPDGhpSUuZI2A/HedDNr554kxF0Lumm8S0PvXcTjP/fPEqAwNSakdAsri
Z485xThPjOBlXNnbIyAL/Yprg3sk4v8AyhTRAQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJw913c8Vu8fP/Db3mRUKoSs7IpCud6XshKF0LIJ8bEyCmUkIzuUmayUCKUk
IaQoZGSTvffe43f7/h6/3/3P/Xg+zn2fc533ua7X9T48pvbat0kJBIIjGYGw
9612e6yxbNwFEf73mQNfn+D7QYfS4f/Z3Hn20JNDH/+/5S4riH/aKYWp3b3P
LFBHX0yZm6+Ejyv/18Yn0dIR6t+Q07TzP39uOKmiwlUPXE8m/+fOZblvTgxN
cFjl2P983be783twMwR8E17fs9wKBbfWQDOklnKv7vnIHYnbPTItcPpKwNKe
t7quv7UJb4EuDbn5PfdcfjS7NtwCVKoM03u+Qn0wEphb4a545MSey8qzpPzP
tYJa2a/RPUt64LZay1Z4r5Q1tOcUqRY31qhWoDwq1r/nm0+P1hS8aQWfIeXe
PbPM3OG4WdoKtTmK//b86PVOafJ4KxQojLT/b7zkF/cp7rYCaZN/654XjaNM
RtnaIHuJvHnP5oeFyMVxGwTGRv7ZM8e9u7qNum1QeyqpZs8tf4sznG3awDPK
q3rPyqFaF78+b4PJb0Xle94ZT4g3zG6DkTam0j0XKI9MklS0gbnqiaI9CxI8
wlSn26De+8/7Pffp/+idJG2H00mK7/Yc+4XpRDh7O1wo9njzv+fllP635UI7
BBzlTvpffepn+NxutMPgc//YPbuJyrpy2LdDu31y5J4nhuvYzeLbofRfj9+e
U8+zW1PmtYOi+qbn/+r10vRr5o92yKkpurfnmuurBnNz7cAZsc9qz48/KeRG
UXaAKPsLoz2fYwkhnOHogPyTX/T2nF3DnfZQpQPU+YIu/K9eQjZL3AYd8Mvo
lOyeOf0+KVXe7QCreR3xPYchtTHapA54OzNy4H/1SoiWzcnvgCchF2n/V6/V
niCtXx0w10O9vUO0/XsnsdilDoiK9Ozb88y5/r+/qDuhq0Oyac//VV923+To
hMAeme97tuo9XmWo1Am5BqJpex6xjrGNuNEJ185QR+7ZfIWcrcK2E3gDDnvv
2Zihz5j/eSeolX67seeeWA2qa287YcMUK+1Zn+/ru8DSTiBZaJLY8/Wzzzcm
RzoBpClI99z6kyyFc7MT3F+Ej28TraPtqHKFqQuKNEka9qx5Rz36w5kuENOw
idvzn6UvckOXuuBCjdqDPat7C/bvN+6C8uVegz2rxpCKuwV2AZ/2Eseef/I6
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
VviBOfmYo3TLu7vE35PHXCMQ5uT/D7X6Crc=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"dP/dt\"", TraditionalForm], None}, {
        FormBox["\"[S])\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 4}, {0., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "2", "4", "8", "16"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"n\"", {FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"n\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.681561236839323*^9, 3.6815613128384533`*^9, {3.681561386711853*^9, 
   3.6815614121535378`*^9}, 3.681561986936451*^9, 3.681562191741125*^9, 
   3.681802474080945*^9}]
}, Open  ]]
},
WindowSize->{1063, 655},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1377, 39, 97, "Input"],
Cell[1960, 63, 64959, 1166, 253, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
