(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     68882,       1277]
NotebookOptionsPosition[     68553,       1260]
NotebookOutlinePosition[     68908,       1276]
CellTagsIndexPosition[     68865,       1273]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"k_", ",", "n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "/", "k"}], ")"}], "^", "n"}], ")"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "/", "k"}], ")"}], "^", "n"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"PowerRange", "[", 
    RowBox[{"1", ",", "16", ",", "2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ex", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "#", ",", "x"}], "]"}], "&"}], "/@", "r"}]}], 
  ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{"ex", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"Automatic", ",", "r", ",", 
      RowBox[{"LegendLabel", "\[Rule]", "\"\<n\>\""}]}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<[S])\>\"", ",", "\"\<dP/dt\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.681561232133458*^9, 3.681561232134602*^9}, {
  3.681561306104985*^9, 3.6815613118031588`*^9}, {3.681561355908132*^9, 
  3.681561410586422*^9}, {3.681561980519415*^9, 3.681561984751116*^9}, {
  3.681562188870364*^9, 3.681562190628628*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVzX8003scx/EhbGO+rsT99ouyS5F0Qjc3eX9qSUvuLVN0T6mIUm7popLp
hqsfF4W5abVusrhdFKPihFJEXWkZriltpv36iNQucZS5u3+8zvM8/notiDgc
HGVMoVCCDPu/G6O0HY040Y+VoKr+v5rb2yLkZAi8qFjrkjszBOwsus9Xk3uh
1NyCNYexF5b62BZfJRPA1GTSOIWSAN+99KzMI3+FA7IVLjmadGi80uSdTebD
Intv8cl7PEhPzTz+G3kDRormt7iFCmFvwgh5jrwDoqsFAbqiKqDms69/+NgM
z/bMbhmefgQ1L5cHBMwXw7rswp+3UZ9BWHrfq6bMLthVV1XtMEcMh0Xx7pdG
e0ESZc+POCYBXc4/T42M5LByZ6Hg5UAXPH3U8lDsOwBl81S+klU9EJPEZmwf
UkLrxt33Y4N64RFt+XT5TxqIntiU58Z4DSXCZv3sbwbhiZvFi1mtfYDsGoo4
t4egotDPcRhk4N7aV9viOgLNCQ3czzw5dCHO+7/ef4C/G9JcRuP7IZZ+UNK9
TAdnbJ94xJspoE0a2mB1/l/4lsk9c5avAM76MIVSOQollGJxmMMArCjMDC1k
foIUakl9OW8A+vW8rv2/jEN4Uwx5hvYWVGyx0K5pAlR+QuJo3Fuo5MuTOhZM
wrjgltq09y0UnzU5t/jEZ2j2veXq76OEscgfB6PrvoCeU7eyJ1sJFutOB4vs
9bCINi85RKkErrXKUrFjGtJuamsvLVOB5QM3Sk8QBZ1ge02ePKaC1Ud/mGqa
pKA09z76gUYVCG5kCZ0ERuhi513JFEUN4Vu92mmBxqhtONmWy1LD3e4o3oNP
xsjfHsdzU9Xg87zSWH3RBOnGbbbza9Xg6B89xls3A32QnNBd+agGby/v3Dvq
Gch0Yig+hqkBuS77mTDDFPEu5KwgQzQw5Lklg1xuhgaHT01cy9CA8zv3QaNO
M+RIW1KlEGmgmZkoiUs1R7jk8Jw3cg1c6OqODGZS0blRxjY6TQsjnMZc42Yq
Yh5xOfXaQwtVW2exfI7QUDRrsycnTAvC9vSrAzZ0xC7d0HaDq4Xx1h3JNo/p
iGVn/SqtSAv9uQ/HrA9ZoLXJt4ZYLVr41LGKTLOyRAXtr2sOqLUQl7+wMane
Eg1fyDOnUzHYty+0VoYz0BPXOF+OMwZOd/mXuXoGKt1nVkZlYdDtuh7bV2qF
pml8itMeDA93V2RYbSLQPicZO5CL4b44NlD2PYH8KoJ5jw2+5+f61e0tBIrG
NW0+KRjK5xYLgkIJRNIjaYtOYrgsvVydFUGgN0uKak1OYUjcfFpBTyJQqqUO
16RjcEM7V5uXEOj0fRvRzEwMzhWzTXpuEkhTc01+1uCF86VPS8oIZHU8Z2rK
4K+/BIesFxHIdVeZuTYLg1nthoMZ9QQyi168te48BoWHF9+kk0Ce+lBpeB6G
vj8+hnd2E0hU2qKXGCxlVDCFUgIJHDtsA3gYXrxbXLlWRqDegFbCIx9D/Z8O
ramYQEv38dfof8dQa/cma8sQgVzYAaojFzFUZ1wOXjBCoER++XGVwaWRs2SN
owSi+5cdel6AoVgiEeaME0iVEtgBlzAUrsmJ2T1JoJX9lU7VBgsqgzyWTRFo
v1QW5czHUOBgMTY9bfjvkBbwDf4P485X1w==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jFNB9Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
XHlvIoESoeOWjH24zW2uPTlfSInGrDvHt3GLioj6Z4xRIomlt2biW/j6FMyh
KDxJiXgXlwkY7rMbq/RJ/yiRnmpIwDXcPMW5LlFzlEhJ3ClWFjf9bWQTsIH3
f6YRcQ/3gMEtXXNmKhS5Rjlugft9oL7A+ctU6GtebkMMbpcVqak4MSpE2e4+
H4/bUYM37qQEFSptpd+XhPs59zjPEUSFTJuuXU/Hrfv9KTu9PBWiWu59U4hb
pNR6c1ybCtX47XvSjrt/wbs6ypUK9eXYzFNsk2Bk1yFczYMK3WVsnabGPcH4
1JrGkwopM7SP0OGe45fnM/GjQr6/+mpYcJPdp3a++IUKJam/NDuC+0Tpa7GS
VCrkpi177CLuR4FmcX1/qVDaz0QBbdxPwnVe+/VRofMHPcp1cZsmK6hJDVIh
kry75gPc1pXnKGLHqBCbyLr9Y9wem+M6z+apUI8t41cL3AkGehxb1NToE+WM
pivu6UvKrocuUqOICK+eRNzVsSP8X0WoUcYn87Uk3LGHbKp4rlAjqmoh1hTc
erthDKclqVGUtRz8xN1SM+1/WYYaWR4QcMrDnavvEaaqSY1KskvDanG/8y3K
9n5DjYKDGXWn9sZDUNXY70qNto0bxKdxS70Y2whyp0Zb6pnss7i3NJmwUC9q
JNK28Hsetzn//bLEj9SIIuMZ3Tpu9YKVxspEamSvyo9odvD95J/AFHkLNTpz
FR6cwM1I2xCT10aNelhfnOHFvchrrv+ikxph/KWzfLiLddI7J3qpkSptmtUZ
3JrNlysbJqhRnA3rY2HcPr8g+usONcp06lwm4l52V9a5epYG0exe+/0f7p7o
hUOL52nQ/qtJShq4f5cEtiUJ0aCtCotezb3+m223eURpULIfx4I27tNmmhJ4
b1QvvEXzELfWPQPONjUatKDePW6Gu4z3RbO5Mw1yanBwccP9Ni5XfestDSqK
rKhxxy11lqzf3Y0Gtaq3sLzDXSLk+S/Mkwa1lYl/9MRdKB5BWf+BBk3EPgry
w52tVH/5TCINEmpS++8z7kQHvi+DzTRoN1GLLBm3b2ubgQovLUq5UMTTgNvr
tTdvEz8tKv2nytWI+/1p6dE7Z2iR4eVdjibcrg4ZjxQEadFd7CtdC2573kBj
WTFa1MO7f6Qd9+PnSmbYbVp0GMWY9uEG9lq7s89p0Shf2sA0bsnCNxIJL2nR
MH178QxucSPxrVO2tGj6k0D4LG7R/IRXfK9pUfGatdYc7nMPPZx4PGjRCQ2/
2kXcBzOk3ThCaVFsurPLBm6SarE/oYwWzX2tfkSzi7+vxLk+za6gRfUOKUCL
e2dT/ubTalrUHFB8kA43Y3TbVtsfWvSKYFROj/v00tTjhC5aREMzysGMWy/o
AKZEwsfTpxXIjrux9cnU18N0qDX4yhoP7nS1A9evWtChtHCGsCu4A1gcJ4qs
6BC19YSkGG7L6glvmZd06Gfylb97vkDM71S1p0P/PRXiEMedymtgaupKhxR0
A10lcf9YTP0U9YkOqWRGy1/Dneh/e47pNx26wOllIY87qv7t1yFWekQwjFS4
j9vrwqbWtwP0qGM+tWPPLz9Ycmlx0iOkTdTXwi2rrf+l7Sg9YptrstTGPTuN
fao6TY9el6/56uIWY9wI+oHRI0nRtHQD3PXy5l52T+hRTJXiVxPcq5Va9qy/
6RH1hVfH7XAfU5V58buMHjGf6Pbas0yfkJllJT3KhfbVPX9cIhg019EjD5fk
OnvcIscT5AM66JFo5pDFq7087JYPsc7Qo3OGuYlOuKfP++Ts52RAc5nfOt1w
D/gXLe8zZUAXAhnFAvb8RiE3wJwBMQcIeux50Orva3YrBkRbw9y55yG1VRpO
Gwa02kpvHYh7+JDQYe43DOhwx2paEO6xiDBM4CMD0qnvPBKM+1/aK3e5QgYk
WXij5Mve/GiSOPSGmRG9tXmrE42b7FnH6tX9jMho0yhmz/S0Vu3zbIyo88++
6T0fwxID9Q8xondq8TYxuKUTOZmv8TKiX/9t+8TiDnqzTCATZ0TuLJap8bgv
XUqZfmXIiMSn9lUl4TYPOlFsm8+INgIL1DJwq3x4YExRxIhe1XJ57ln0YySr
dwkjSk9SLt7zRvAJw/AKRiRFTjybidv1ywn6ykZG5LlzdGvPnyNP3GUfZURV
F86EZOMuSz0x8YOJCY2Ha6Xn4j5Yf2LfiA4TEvjj9bJ473kvty7q6TOhVvH3
EXtWP+re0WvAhK7OP6rb8+dn/8I6jJhQTkLh8ZK98TJnCNRaMiFduamaPfPf
kb6V7saEWmblDpbu3W/TYzenH0yIlWc4pBy3alvSFtcOE9q1XLhRg/t13NON
BjJm1B7ub7LneNvza28omJHax/0Be946mrQ4QcuMlGUz+vYc++j7VAYbM1Jo
dn9Zuzf+1YTO22eYUdQLx/A63JGH4zIc7jIjaWmTvj+4F3QjnvYkMqOGpgya
FtzLwVSi+snMSDRVlG/Paw3G26MpzKi3Olxqz7tw0YeUwYzkV0Rf7ZmRpzSF
UMSMDp3Umd8z38DIwukWZiRzILOtdS8fvdO2LzaZ0bmXSz7tuIv0UlyZb7Og
mrBrlV24cxue3upTZEHawT+G9pyFnd3/Q5kFPTWl2tlzEldMqMJ/LEiaxkKk
ey/fzs8/vR6wIDt6qfA9v1ByG6S3ZUGxt3us/uI+hxcuTSwLuh78gqF3L++U
wxQd8SxITOc6755PHOusiv3Ogpg1tyX3zLmlclcmjQU5XL5sumfqHFkT13wW
dN+4oGHPg0IinyhaWJByjrBvH+6esHmdljYWlD5YHbvnTqYU3qhOFlSnpFS4
5z//zqRK9bGgo1J8M3vOj+OudJ5kQR4S83L9uHM4er2Up1mQgfaK3p5/un5W
OU5iQfI3J633nGhwoK94iQVd/RkSs+eY5uYov1UWdFhNLX/P4df8jPU2WFDO
zm7znkNTFYSEt1lQT1HI5J6DuRmWd3dZkHg8N9kA7v8B1yt32A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwd13c8VW8YAPBri5BIyi5Jsooy73mOyiqbREUyyvhRJKKEQkJ2mZWtQimy
Qvbee++9rr3H79z+up/v5z3ned/3uc/7nHN4jB9pmZHicDg7MhyO+HvdbKq5
aPopMvf9W7P2WRP+ye+6xoMndOBk5M9ZC7mrl1lo2/0zTphCc8AHgxrkqoSw
FHPixxP2MLKckeWMvyop3SSWHnzCA643qsy2yF6VKooqvfTuRCjcyIqicpW9
Kv3a3feZz4kEKC+/ynJT9qqMqT3hxNsTmXBhNZsDlb0qK0YW7PzrcSb4seT0
fhBQliUNFu/trcwEEluhuUETDdnPP5yihR1+g1RmTkq0/R3ZnhkyrraWLGBS
KPXwMrSTVb/Pysvllws3ziYpRo5GyXIu5nkojeYCL00CE41srOzcS4NxW+k8
sD25QT2LT5T1iY5LKpvKA76KuXdGJOmyZ/MmHx4P+wN7VM47CYPZsmWdgucs
5fOhr2SNujO2WDbkQePbkOh8eGL3Na38drms8ZrtTP5KPuyM/DIer6+WFfVg
vjFxvQAekEtk5LM3yh4czU5hiCuA2CfcMULZLbINsfqHpbYKQFnj4tvjzzpk
o0V3/zPWKIRK4Q+uz2d7ZK3+fqr3TS4EXinz/9aOD8lKq8kJ/94vhN1UDi1j
8VFZ6v5R/4Gbf6HNW3HbbnBCttPKi0CV9heyGF68yRGdldV2Yf7CSloEF7S3
fFJ4FmXzysz00oSK4NWeqMgVthXZU4ezqa/oF8H6Sg8Hbdi67Ftt6twOjyLQ
v8zzKOjrtuxipL6FVXoR9DcHad22PJDVG/l2AtdXBL53zizzOpPi/57brQ6l
KoYjh+PoaDIo8Hy2qs7nxIphtMgpwMD2EN4/55NAoWExsKtpSNFX0+HXDgg9
Wj7FgIZPxJqYM+LvKsr5Tv4uhgu9amy8msz4Mv9gmRfDxfDfftw9k7Tj+PMd
o7NH6EpATs+4Iu0dGz6Y41J0omQJLGm7tBqScuO3Tb1UpE1LIGE96spgyCn8
/dTO3YaAEqC0vF9z480ZfNUKf5rJnxL49N9VPq4ZfryojLPB5kQJ3Lv5Ztq7
VhAf9qqW7t3RUvj+5wOVxidR/H41eyEPUgp/y7mtVfnF8A8YbWyyLEphf+Hr
VS/6y/h6vb+cN96XgoWfYRqzgRRePOZI42BRKYTmuDR78+Dx0ZP3Xe3nSmEB
ipjf/kbxZCIZIodYy+BOyCMn3TNX8ZYO5EMfr5ZBAcuXo9+m5fEtBTcDLz4q
g4RAXwF2OmW8FEUyWhlZBvynYzZdolTwMSqbi3cqymAnNObmnoYGnjpUOXZx
qQyGXyANH8O08DuSwzuxJ8uhM3BeJHlHB7/Q/0xX+2o5rLiLkY99uYUfenXk
J/l/5bCn4VnzKPk2vvXsF9qs0HJw1UcapHCG+Io6ePCwoByecag6+Q0Y4XNs
O4tYJ8qhjq/uw+NVY3wKyyO2GvoKkLGwsihQNMN/+kPp8FyiApYIvVN7Aw/x
QUafmgSNKkDK8ZrX/WJLvAfF5fMD3hUQ2f5ss2bdGu/wrd4z4GcF3Nbi51os
fYy3UDcbQnsq4CGebIPurx3+7uqu9DJpJSAslGuEJXu8WkTo+/jzlcB7Oq3m
mrEjXg4RXNTRqYQXAk7NV1mc8eKjpdcpXSpBap6mMYfZBX/W+05idmIlMDAk
aXlfdMOfFFo5MG+oBHa7VNcMqlf4wy0+t09uVAJP/FOv6/Qe+AOHU79ruapA
8HPID+4bXvhltjwGF6UqiM20cHlW6o0fK9K0FLatglrqhJ7DLr74TrPpssGI
KmjJ1906+dIfX0PjzhVUUgUkM0aOWROB+IIfrM5XZqsgMVzS72JuMD5dJ71t
hakalFhPCnrmheLjthRFEmWr4bZbVCQN4QP+/afBt7pm1VCVnb758k4E3vuq
4xiVfzVYT7o3U1BE452n6CE3qxrCysYvXFz6hLd+lxRhOVgN9uEFX6mYYvFG
F5FVNuoaoLK3XWZuj8Nrd7ar1YvWQA8uZFelJAGv8ML660v9GvgRad/mNZCE
l+ShIBd9VQOBWdqSM0Jf8ecrog2Hv9WAkOJUylpmCp7TSjw3uLUGsua+rns8
+44/cqSO6dpuDdyjzTw0V5iOJ/ttYrPGWwvHGVhVVM1+4df1d6qSVGuBYE5o
eHoxEz+9H3xaz6EWstmDjmecy8L3xQu8PPS5FnYU/E+/V8vBNyiVdOVV1kKo
7RnxlYQ8fPG8vth/i7UQ/Mh0ZlG0AJ8ZvPSO40QdMGeW5pBt/MUnSbydapCr
A9Pk+Fu7LsV4P/ecjxdC6mDrzKBl3WwZ3pVPY3PkTx3c5mAZneirwNvVTmqF
jtVB+B0NM7KtKrzpY9c0ebp6EInzWnx/tRZ/69hx6o1L9eAmpHBYp6gefz3v
u/EXw3ropTn1OVqqCS97T6FA/009tBTeG5VPb8af+vrULr+rHlisTPeC99vw
zGp09dYkDZAl9E5VvbcDT7WScJZLoAGEcjmYnAa78Nthsq+atBpAnhIROk7f
i5+Tbetzf94A6HMTq4eW/fjBYSsJsYQGmGRo4R7ZGMS3eJEFj9U1QG+i1Aan
wTA+u+mioiJnI2iDZ+iwwxjef3pOSVChEYQrH3HXCUzgH5AmX2e0aYRk8dZz
vrgpPMJ2X2X9fSM47grW+G9P41nE2dR6CxrBUvB78mO2OfyCSrt60XgjrMiE
u66bLeBHf1V+aaFsgjL8I0sfm0X8n1r3b9nCTUBhyUS6KryCP9tleP7blSao
pQwilc9exYeMyaRG6zbBZL1bYsvddfzBIqtQgGUTcP81X4vj2cRb7a2lub9s
gnPBwZz9VNv4zkOtwvbBTfCSTe9+LeMu/ipL+o8HSU1AJcfL1S+3j2cTsfx5
o6EJlKNZEx0DSBAvGcWLyEgTvFE2P9owRYosK/JmiK43wTqunWv8NjliqEMi
fpqmGWRCfTKNJymQGqOBzGOczXD0/FIaZSAVctn6zyXqi81w2sT6VqruISTO
KTxrW74Zfmi/WruBp0Wcg7VyBq2bIWKyp2nVjgGZ+CQi1eLeDOLzWnjF0SOI
VsrhvLL3zdBg7KUez3MUKcyels7+2gy7FB4SQ0+ZEIGyij9fC5rBhn8lyGSY
GfnQFC8b3dwMrzXbWL6YsSCk/W4F/uPNcOl3YCFCzor0rEn/fULXAkbGnQPs
YWyIAikr+oCnBeS5q5NwARzIL/q1Ir1LLaDhTDVh+4UL4WRrkbuh3AIv/Vdo
Spa5EZ+zP0rwBi3Q+9XUV5z3FLIu5ndV1LYFHlYnmuZanEaMUYuyU54t4PLL
z8CnjBeR1j9dQZXWAoF1w0qaf88iSWY4xe2iFuDmMDt23PgcctSuv3KurQV6
wjW/13CdR16+zFManGqBELMURuptQWTGJ6y6ebcF/ux9J3m1LIzohtlfLzvS
CgKJ1h/cPUWRknjN2izeVrjV2vMzO+4CEpFPWx+l0gpbH3dL6ZnFEfLqKVV/
o1bQTOaV1LO8hDxuL29ws2+F8q/RYdPtl5G+4Tj1J96tsGu9kr13SxJRWnBt
MotuBZ8XR64MLUkhmdt3NfXSW0G0otVzIUEG4aaSbrle1govb4jdCrfDI5tc
q60ic60gJ5C4R/iJIqaCzTqncG3QsucnfL9cDmmS/N7OzNwGvzKGssymryBf
NM07t2TaQG7dOmbmgTzCbCivN6feBhxldpesShQQN8tT3QMmbdCZduaP20Ul
RO91X0+pbxs4n9UbILl5AzkyxCf4MLYNAqYU0w+LqiLVsrYuNNlt8AfXayZ2
Th15FfGnIa2uDSZ/OVJxxmog0usU3JojbXCz+NufV4WayLKWhu3qRhusli1e
KJvXQr79iCwJo2uHKx/2bOZEdBA2CxGzAcl2+KD7MuT+ki7SVu6U5a7WDo8K
9QmHn+ghfqfKqM6YtoNH36GXBodvI9dc6fWrnNrB3z9NKrXwDrLbq/fNKqAd
GmZP3zD1NUAyJeN36BPbIdY+cpbM/h5i/X5e5VdeOyjN0XyhLzBCBtReETbH
2yHPSXsre9kY+ZBSh0bvtMOzthpRjrOmiDr18WBg7AAtkSG/ZmszpKg4RdxL
tgNIC12y4LI58oxz3fOcVgcsuNCdO5tngYg+RzvrHnbAqwuv1PJ0rJBY8XYn
ppAO4DhitzXUYoPcDuKqzfrSARGWkn/f3X2MHF2wYL9d2AHv2IUivxjYIq+S
9wtjpjvgI1kB76DfE0SaXPnItYMOsAqCgw/59siKUcj9SeZOiCtO/eq59xQx
PclPLox2QlTmmz8ZWc8Qdke7m803O6HjsszJCVFnpL01P8neqhMKriShl4ue
IwrvNJX/fOgEpO8eTcwpV2R/OirSMLUT9ATCKGleuCFZChOzJCWdkOw1NpH2
xB05i3vurzTfCeaz8nX3/F4jQ3fLB2dJu4Dp3A27ru8eSHguw4UA1i5Q02Ul
HBn2RKifJLS2X+0CqWZqzk1Hb6SocYHXSb8L7B6oKt4eeIs4CUo5sD/qgnFr
VpqxW77IzHg9q0lkF4zeSQhU8vZH4q6wWlKmd4GzyAfHD9yByO3Pxn++lnfB
d1kBnyTqIKRWb8NgcbELuM3Fd+f3ghGP33I/Qii7gWrr2fbdw6GI7FE/nAR7
NxgqBXzt5n+PpNZyx7sodkPGjyiHP/5hiCm/1Sq3QTeMiRdThnaHIxyev+XL
7Lrhu++h1vuXIhF/5PoUzaduiPwVJ3Dq9EdEISpU6ntGN7zqqrZpyPqE7G8M
+GhWdwPdbypGO5EY5NHPJ0Lhq92QJtfcwbIZiyzIDrdWU/dAw5yJ8XJfHPJf
lZrzDnsPbPxyO25XF4+YD56rNJTvAQFfvjPS9YnIhGWYdaB+D3xqC/Z5MZiE
mK6TM5dY90AMz8i7W/vJiBHdkNGZDz1g9cWKjdz0GzIQrkp161sPFJ0waNpK
SUHu8v5J8y7sAfWg5cEm0jRET+bD9uxEDzAOM6emDv5AOirIYjl2eiDzryDz
64x0REfLVlGdoRforUWd11x/IhoWKqG/JHrhidWHD4niGUjDaq702I1e4Guc
S/zKkYmouJ0dPmbUC4J7G5o4xt+IUhipsJN3L0T2tdkYsGYjFacet32L7gXd
+MT714VykGvf+5370nvhqOhZuVtquQhanlMJ3b2AH623acz6gxRq8NnYzvdC
qaPMOYWDfES2L4Q5nqQPjtQdO1i5WYhIrtjcpxTog11a8nunwosQUZ4zO3XO
fVA//bPmaHsp8j01OHbfvw+8uMiNGvLKEEFJnJJofB90zoxXy30rR/jVe0ND
avsgN2zGsTe5EknqUZIpH+yDGU1Vh6asKoT3Qdbw+kofkDkd2j3ZXI1wuwQJ
32bvh2+VZb7PztUhn6gP2nxF++FY81C/k3k9wh763/OCa/2g6tDwLi2zAWFN
Uazitu6HJ00XXO/+aUIYu/fuTxb0Qw9bYIJJVysSaGpFfaKlH+jzF/BamW0I
/WLX9+sT/eDKL5V1NqIdoaHK3EmjHwBXC9r04ZediHcwT9zgqQFIsgrac3br
Qig5A5QYJQZgIXd7xdSvGyG9ZPne/t4AfNmT2Mgu60Xcijplkp4MgDGOXHBx
qQ/ZvyE/0vlmABJ+ZQcdPz+AbBtzi8ikD0AUyQS43B9ClgM7qkhIBoFZJP+j
8I1RJP+/nzDGMghR0leoEs+NIW+U/LIqBAehXDf1sRPjOMKOu5LgqzcIDdoz
wdn7E8hELzubjc0ghJkLh02STyHp2RtBGh6DoPrVwpqUZRqRf5Tmeix9EPgs
D2ek3Z5FjtzwXt8ox+Z75OZ3KmAO6eEzse7pHQTTq/lqN5rmEYlHfmmNZEPA
P/il8hZ+EanjuxIVKjIEmsME3BVYQX6G/ujwlB4CwmkO/k9Mq8gHUo6jjvJD
4FqTuuO9uIrcH9jw1r8zBL6CEkK65euIgopZ2fUHQ/CuOvTNeMEGIpjXciBj
OwScIi5ZBkWbyPr7NAfON0NgJHXOwGNsG+klY/vFEDwED2zpZzcpd5EiW+95
3MchUOsa/T4ivof4qpqYjv4agqCcSu2qzAOEm+KE1pcBbP4kO4+qL6RA8cTr
XcT0EFzhfcjHZ0MGM0MrVT6rQ0DPE1l/WoYcfuc3gDXNMIgKjqudnKeASAHZ
54bHhmHJgyoxqYUS3MK/ZqlzDwPHUirHdhEVXLf3ELp4eRiybqTRSeUeApGR
JfPTcsOg8vbhi7pSGmDWuJfArDIM32ZHzzh20cLgeWm2jfvD0FzbJOnOQw/2
owTq/HfDUJC2Fur/iRH0NQ2upYUPg9D5tiFPzaOA/K1x/RQ/DPXHVWh4aJng
UFTiulvuMKTSPE0VCWGGBWqmi3Zlw5CysQOcxsegzcHN2qRxGKxWrcmSJVng
k9adMfnxYagVF7MJ2TsOr4uquCQWh4EwNhHyao4VzIUv3+HfGQbL/05Snh47
AWI0jC00jCNAESkVnbzABlXFFX8bZUdg5rbf2VpZbkiq2x17pzgCoWKzHM5d
3ODZeZFGRWsElK45HUQ78cCV+U86VQ9HoPDu54W1ulPAvdnm5GU3AqoxYgK+
rqfhgJT28zUX7Pqm70VakryQz+o4XRQ8AilNPc8UC85A5Ok0etePI6Cu1pA1
+JYPnIRHxfBfRuBS785HN4OzcPma+svcghHYsPYIKzt5DtIfnWX6NTUCErn8
v46sCoK/s4Hk45URSI+st/10IATWniEGwvsj8JIu4po4swgIRB0kf2MaheUW
HrOGVFGgTrpUb845Cmo9C8Gv5S/AZLrVMt+5URgz+eyuM3oBEio6ZeORUdAk
q02cFxaDV810xveVR+Gyt30rTb8Y3O+7+oZLZxTYRB6WzAeKA+fyj+Yoi1FQ
xgf45tNchnAO7wehoaMweE+Lq+GGFDjwF/pqfR4F/2PTR+4LScNNsdX0I99G
4e2adZcKiwwcVTba8fs7CqJvPR2ZD2RhUfsD942aURh9Q8L58AAPjYZ18ofa
R8HI1FIVRw3gZy8Z6DkzCknJVNdeR6Bg6Wrz++raKMicsmfeFZADZZ+EHhLc
GNAa+dSwF8sBZcyRMy+PjUH+i5s1YztXwK12KtcBHYNkY4LSjx/yYNjBOSh+
YwwSTJ8euFkqAH5Yh3zl5hiICpzgFTuvCNvrRWqPrMbg+5D3yHShEnSRbDwR
chiDJ8IlR64HK0P2YaGIWbcxKLxKMy7333WwPxUx+vDDGMTe1nhRIK4CWkKN
1HyxY3CU6TZN8mlVuCBJITyWMgaq4ZtjKyfUYEHV9plR8RiwX0HPVtNrgIWT
Mp3+3Bjk6u8cDr+qBd/YGA0M17Fx0ZlJg2YtmCvoSjXBjcOb26t8/CbaYENq
rmLDPA6idb3Zl0N0wN7Xy/e17Dio83YT7vDfwr5r1Xq9FcYhwohW16j7Fmw0
HjvvrzEOtIZXKnUC9MCZObEm3HQcDJJKHgfR3AbXj6WHvvuNw0sKtxGuKwZQ
BL76GR/G4VDh5CMzTkMgHdH6mhMzDtZdLS7ZuHvgwTeiVJo5Dh+6rLsZ/jMC
nx84766+cfBz1gyTtzKGOs2qzv6JceBGS+P6VoyBbjXg7OjiOMScjCQ742YC
gZJclfPkE0D5/Msqf4IpvC/GU5IJTcAQb19RFvtD6DCh0KWWmIAztcNk/uUP
gZWyPpFObgJ4jAeSR+3MIfL6XXnWmxNQOvRy6nmvBcS0OnsIuUxAyetmxdjJ
/2Dk6ZW2i28mQL8lSvVLtjWcZqXhlQyagGjFYu9T72wg6W5E6ZXECXhWG8j5
gvcxpIxnk+rVT8A7I6kDMnI7mHvjqmXQOQGzTY1+xa/tQFhAMc54eAKyKA5U
aiifQLpNh5z12gRMbTL10B23h6yNVbdXHJOg/vJk6hdjB9iMyG96c3YSRFb4
n1AfOICUrAf3uwuTIFve3n/vsyPkuzEVhclPQnzh7RSduWdQfOjiQar1JOjq
ltrT5j0Hfh3RbJ9nk2C+9ctI4O0LCPwk/Mj89SSkkd7THzdwASOx84OnIybh
o+dJo0JWV9i/y/s3smwSNJd6/1L/5w4Pkk85PmuchB07I/4jc+5Qv8Qtotsz
CSONInsvH72CaC+Oz4yLk1BsV/hx0u01SKezuHqzTcF/hfRVak2eELfNLPGA
bwo8us7FbFp7wSF5JsLVC1NAVVQt8pfhDXR1M9w7UJgCZ8G4c5RG3uBIdggc
7KbgZmxmueZlXxhQpdrQdpmCa/zNFzM3fEEhnOLHBe8paH6ueJK60A9YhEi5
5j9OAcUdQtumvj9k6u7sm1RPwXvnqNt804HAHruVJdc2BdnPkNUr94Lg9eyG
DdfgFOyYwRmdriDQclsd6Fmdgs6s2tKw1mBY/DpfqMk9Dd0lCvzvFkNBb3XW
QeT8NLRPKsVccnsPf5EZYbrL04DicYH3mT6Af+vEp6ob0/BXwEcs6FoYCO0N
vgTHaXBRPbvzsi0CQhUHLnO8mobkbGmrx68iYTeob2HbbxokajTMvMWjoI6v
2zArbhrEPkglvU6MBkuNFkSoYRq4pne0uQo+Q0tk0zpN9zT8jj5sbKAYA1Lj
Dd+nRqchtSnvWuSvGKB2ruVM2JqGLHD3CQ6MhaT4sv2TZ2bguEr7SJ9VPDz2
1BkGkRk4HL2/dXQ4HmQejpWaSs0A2c8YzSK9BGgSIH/7XXUGysM6vVLVE2Hr
51WmKw4zEI+LuUtmkAxlIa1rD9xmoEwOxZ2fTAb/pyZdvj4zwLD0g5PX/guc
knr9sf3TDMjjGgtzP3wFlaKSsxaVM4AfaR/4e5ACLHFaNP7NWLw/gSRFsakw
/Hpk7lfvDHjZd4QsKaSBgyLpr13CDFhesFc5GfUdYhrkZANZZ+H78vu2hd/p
sNJXpJFtMQupl4KXj/RnQGGhhljfk1k4/7TUz/t6JnjHDB0jeTkLpzXye3Zz
M4HdFNd7PXgW+H806a9++g0Ks2A2kDcLG1Z4uxr3bDhS36hIVj4LcCLlTutB
NvR+vyfA3zgLrWribofccuCxnSvBdnQWKgNN/jC/yYXIrUInisNzwPpOzEM+
/Q+Y9qrdFWCZg5boSslbaD6IFAwg6txzoPn1tFdJSz6Uue2TRYjPgVSCmUze
fgHMUyH+ggZzoOL7PqFHqghQloI47e9zMIvgkupmSoD8/bFH8jlzEM8QWtp7
rRSqmGxkJErm4Ld/YJRATCmoM3K1neyYA43PIgu+t8vA8LA7xcjeHDBROUg7
DJTDc1J588eq85Buq+2pfroaEPeP4sa35iFiWfZPXFA1kOLWcTr358FiUCBe
iqQGfPaSIiSezoMAu2O78FgNhG9S1+5HY9df4/qPObcOshbqhN7NzYNJacL1
KLUmcLY+s/1yfR7oaTx23AOaAJlzqXiMW4CZB0yHt5uaoHxa+J4O8wIkybjo
hd1shraxwEA22QV4mLJqqGnWAss9OitffRcgXkM5sz26DYQq+3IqBAhQ2laS
2qTXDSwLVvOBlwiA99xwKUjrBtyxHZ47KAEC/eY7pkl7oM34hC/hJgGqxQr6
5tN64MX+TQNWdwKcjs18eJKyD+ouNZJYdhKApUjtRlreAFxqMUqkvLKIvRdd
7jt7aAS+mX35a6WImX94t/fiCHBuEbqbVBaBfV4EZ3p3BKi5Xemjbi2CsqVb
3eT3Eeiz/ugoYr0IsVFxBW81R8HjUI+yXvgiSFIdvZjjOwZtqPbC14VF4Pj5
te1hzQRsfx79+GtlEetjdJkO09hz5eCJ6p/NRRjgWVqUpZ4Em4LQ1DrSJYha
4hRZuDYJVNIdlgSWJSj2f6bZlzcJ0mL6k+KwBNtDtg8rwqfAKHj6A/7aEpDr
78qLZ0zBmyUnBQXlJVBMCm26VT8FbT8iE29pL8F1VhmHItw0WAv2mTg/XILz
oU68HKbTEHPm3tDfgCUYpdyJQjhmoMKDEFAVugQzG1Nkp8VmYH7UFZojlqBG
/8KXYqUZkI6L+TQSvwRxzj+NRJ7MQCvnyF2KnCV4Fpd9r7tsBihZzbqvDy0B
9x32iY47syDouOatPb4EpH3tTeHWs6Dd4Sl5d2YJWI/EMHG4zkJMaFKY9eoS
4E3ez9jEzoIU49TNQOplGJEOOqGEnav/aKxa2kWXIbvF/K/O3TlIKmDJun55
GWitjBrTreZg8HFJxF+ZZQh6xBne6DwHWp0n7n9VWIaOS1n39MLnQDKhivDi
7jJUh9mTpDbNgd0t+9al+8tw3mn+qNjAHKTQcGc/eLgMGz1NE69m54DT1vGl
ht0yGPKr1LlSzAM5wkfH670M1xmVjpBJzAOy1LwY/m4Z+rPNC8auzINjgksb
Xcgy3FjL2w1Vm4cZmvaojY/LYJZRR2JqNg9Nna8FajOWYbCJ7XVj4DxE2w4r
2g0uA/d2iIjd4Dx08L47Pzm2DL9UERH/qXlg6JJkuDuzDCTDj6+/XpqHV0hg
h/zaMmQ5hkjvkC6AOS2YnaBdgaETc48u8i5AXOGMkv+RFbh64nbFWcEF6LX9
IEjGsgLy8Se7tsUWsO+2+ZU57hUYtjG6I3t1AcQTo18VXV4Biad3C2SMFsBG
T+nBJdkVoLIz6BR6uADJtKvK3+RWgBAy2U1iswAn7W4whqqsQHP/x3eazxcA
h1XwQ+MVwI8WkHwMXYDarlsF9P4rsEaXzaFcsgCveiaPWYasgGM4s/WzygWQ
7HO0KQ9fgalqvbdBdQuQMBjG9SJ+BTYUj39+1bEALyY63adzVuCavZ6w5fQC
XJx62HOtELu/cKd/aX4BpqY3LsaUrgC9i/PpB8sLoDN/fEy3AZsvdTHv2M4C
CK3eUigbXYEQBfxQBC0BxtYmP3FNr4A+y5vDAQwEiNxw3HBeWAFxv4irT5gI
QLkT9uXC1goIpeisHWIjwABJF81n+lXwMF9kf3aOAAEMeo1OUquQ5BL0Jugq
ARQYp862I6tQkWgpEqZAgN2jz9xEr62C3Z4FIUCZAOYs4Rcm1Vbh9dLLsDvq
BEA5ukJ0TFdBm3LY9v5tAqxzms/9sFiFdAHvWgoDAqRyb16jfbQKjMlHxj/d
IwArL+t6sdMqGKxwsqWbEmBJQE9PJGAVGO6QFWjbEOCL4FS6T+gqvAx3lY9/
TABD4WeHJiJWYVat5GDKjgA1F8LzohNWoe/UbsYtRwLESXax0+StQoJuSVSF
KwG0FfSGx8ZW4X10hejhAALkMV1oHJ1eBZzmI8aMQAKcGj5UMLKwChTZEU+1
gwmw/PxP+NDmKmysOl5wf4/11Z+cGn2H1+Cd8kkIiSLA5ssNfC/jGkhrfaY8
9JEA91SazvewrAFDFeUJp08EEJ50p+riXoOHX7OclWIJUMc+XtgqvgaNURFx
SUkEEJ8pSG2RWoNbrKPiS8kEiMr+ENmMrMGwH3fx5a8EsNRScmhUWgO2RhvW
jBQCUHunCNXexeazIZ+0SyfAtRXb6BKPNfBsiDrLlYvls+i6T/HbNWDmvHPh
VB4BmPxPPyvyXwNUPuEmzx8CjPC3axeGr8GA5WVB5gICuBlK0ualroFBB2tO
fREBps4zbuX8XIMqm1wko5gA6lvTE9lZa2C6oKr7voQAnKFRJb+L1mDsDMsj
9TICFFTvO/1sW4O3t67kRVcSgDes82F69xpYKsjgzasI4GeafvPHwBrYMHDk
ilYT4O7B/QtpU2vw2zO9NqeGANvi5VNfdtfggvdabFI9AS7H+N6K4V2Hv2YW
X0lbCZBe7OpEK7AOjlyvHqdjPj/6JMpBZB0Ch57Y3WkjADff3UEV6XWo7GbT
/dpOANpUwYdb6uvQpZrXe6aLAF713G9Nb64DV/bNvELMOAJzSuPtdQiXPiZ0
sxurxwt7C4lm67C7RL/p3EOAoex6B63n6zDT5yaV0keAO93F4QVu66Dix9Z0
oZ8AHdu/8/i91iFiwVUpC3Mt/tP+fuA61t/vkuYOECCr1MYrJWkdJFOHfJOG
CODbyPCBvGUdjlk7Hjo3hp23JbKcR53rcNx84VMQZrejm909fetA+cI/dBOz
w80hjp+T63DT4O6f4nECGPWmJxrsrUNxrsp3uUkC9O4mVFaRbkCwHsneR8y6
nBHTYtQboDzFNriJ+cZ9dyEapg2IGDn59NsUls9Jzd9Z/BvArT3wZm8ayye1
QieP8Ab0Hmc7qj6D5VNAestPbANORpnf/YyZ2/oU3gTZAOGP1fKys1g+V5bL
GHQ2QNpocP3hHJaf/ZA2c9cN8BGnn/JZIMDhuSZfR48NeM3f/awCs2Q33VWv
txug2CF/kYSAnZeMNz/jQzaAjKPuvD1m1Py5/0DyBlSMQKDGIgFim42VdJo2
AEwY08aXCNBQ+PnAuH0Dst+B8LFlrD5S+rJsezbguGE9xTXMWl66ZwLGNoDJ
c7v4M2ZSmeukNZsbcKaa/Zf6CgGMEy7kA88mXE9WeBSySgD/IJsnanybcJHW
3ToXc97LFAGD85tQebtofADzUf0zEc6XNkFCh1GFfw17r6I74fBbeRN7nv3k
/Y2Z1xEnet5uE94cEw3NWSeAhil+UspxE45t/jzcifmFpvMnpReb8CSQiW0N
c9v51cMPvDYh8dXbA5ENAngMTU7HRG5C+hePI7GYx5Ub41lKN+FoRr6P7SYW
3/dsQFDVJmQzmjL7YTatc3U+3LAJuloiMkmYR9RENUm7N4HyETzoxjygHbQ/
v7AJhtqqd2S2CNBloK1ffnIL2Ck41xcwH/+ccg3l3oIYCf0dsm2sPobIRP+c
wcYj1DJYMbcZZ1L+FN0CyjYmVA5z88NjmdEKW1DqkzHnj7nGtpPe3m4LtHU3
3Th2CHAoQ2R7wXEL7uGixIUxK62+Gbdw2YKj3YkpCOZKB8n8e95bgO8KmjTE
XPY8wuLGpy2YdFL+EY25wPNO2amaLWC5dFGCfhd7XlRk/PjYuAX1y8lebJhl
qQ9HsbZvAe3IkyR+zHk++bb0Q1tgIN+vfwVzVgAH1/baFhR3kcU/wZweMejU
zLMN3wxs1Row/3eOvefi2W04m1hV1IWZP1dPOlRwG6g5++lHMX/uat7WldiG
I+vq6AZm/+Nlz/tUtmHhhw0l5x4BrN9/cZl03IYTJYS3Zpj5z4z3K7lswzCL
2rI15rFMHuTbq234HNeDd8B8ty1y/7932yCbwunmhVmF6Z3rctw2rCcZ5idi
Fgiydd+rx+Jp3Xw4iHmC+/uwYes2TMVoiE5gjkufkSvq2oZJN+2ROcwnm0xI
X49uQ0xWNuk25kMMuq+pt7D1P0rDM+1j/dhP2pOJdwfCDEQG5DAnsDuO25/b
gT/t3+4oYjZKzZDvEN6BBbSmQgVzZ60gZYTUDlgUbDy4hbmChusNp/oO4Ivm
2q0wJ3qTvT3nvANaJppxQZiPjnm/FHbdAd0Op5r3mN2A3l7MYwfqCU3jEZhv
r7Pew/vvwLfin+uxmBlMhS9pxu1AXUCa50/MTqA//KxmB+bj1ZwbME9EDnS4
NO5A1VD9ZDNmnXWTuldtmL27r7djFk6zyfYbwO53ZV/uxTx60uNdzPIO3D02
XjWFWXX9u1TVyV04bFn4C3eA1YOmuEg91y7YDg+/IcPMn5bL28K7CyKFzjqU
mElNyxj6hHeBX9mpjRZzdnP3OOHKLgwp+duxYOZJIw8+brULqjI8eAHM/tQ+
b9gf7wLPeMx7Qcy7JgwuPE93ARfGMymMuePkSfPzrrtw/djLp2KYfb1FEAjZ
BcuMHTlZzGsmt2ce/NmF7sjJFBXMDkw7TF1Fu1D0fbpSDfN6SRReuWIXTlsI
9WsQzdMfeL55F/B5bSs6mDcH70ksTuzCZhxd213M23fMPJyO7oHtZQ87K8zO
tJTfZ47vQVJRsqA15p28pM47HHvgLq47bENc74kpAYR/D5SCo6XtMO91WjaT
IntQd6vw+zPMOJ3HnH4We5C3Q53qgdmNjFFpz2YPfh4eYfHCTJLx09bGfg8q
s1Vd3hDzd3SlTMN1D/4TOY73wUzW9NTq2Ps9cJg9eBuAmVLlec6noj2Ykloz
jcDstcM2wlCxB54nLQIiieMp+bTutXtwSeVqVhRmKpp9Q5OOPVh+o7/1ETN1
lRsF/9weZE2o6MZhpr3mpfXz+D4oHG+w/4ZZ9u8jxgr2fagRirqdgtlGWr+p
h2cfjjd24VMxt4gKqpEL7kO/e9luGuZIjhblW+g+GFKJGvwk1sMGh9ye+T78
PfPpezbm23ZUuKM2+yDjP2iTg9lvfrGQ78k+kCuRCuViJoyWymq47EPtAnl8
HuasJgvJ+KB9CH+a4lCA+dq33yLKefvY+1RccQnx/z3zecHg7z48v1hpXIr5
S4x3ml3ZPnw1O0daRtxP2J3z0Q37ELb6R6acuN7XJGcJI/sAmsmRlZiNDFQ5
39MewLx7M20d5hdHxg8P3z0Aw3mDnlbMAj2/0L77B9Duuq7chrk73s2+88EB
cL81ySH6sgR7X/3jAzglVxXUjnnRQDslz+MABiZYJDoxm6QUK4emHkA4qata
D+ajTwNcAn4eQGRPVyrRRYjBT5+sA5CYk6DpxczessnqXnQAsrlHSoju2BSZ
sm47AITnGV8/5usKn7wUdw/AZ9SgbJBYb1SXDWJxOHS48BrzEOa2OfYNTjIc
eklZ34ToV1kzAiepcaiCL/MB0QPKXsFHjuLQI+JHhUYwhz8uuL93BodWhFGb
jWE+XHge16mKQ733P2pNYZ5X4c700cChcfN0QUQ39DKbI9o4tO1QYwPRAVt7
jYl6OJSiV0Vpmri/S02f7U1w6Ps9a7EZzKyp9nDUCYduuc/OzmLekrZYKX+O
Q79XanPPYe6pNkh2eolDgxoEdIiOmlRgGH6NQz1KzucRzXn6xOAPfxy6Ep7k
Oo+ZN7LgpWoCDjVP6VlawExx7tdFkmQc+mBgloOAeSI7aSLzKw7lO++hTHRy
e4Aa+w8c+vGt+meiBRiNOWdzcahQjoP8ImZRb8pC70YcapPD67KEGe+gvle6
jUN1AwTjVoj9wXLqufIeDg3xt/hLdPo99+2GAxzafcagj+hTyhkb3eQk6FM+
q2OrxPPEfnyZQE+CGoKEB9FtxQMTbKdJ0MhPIjfXiP0ty9Es9gwJ2kAtZEO0
YsqRMT5+EtRKac6L6LzQK8MXhEjQX22/somOeZjUqyhBgpJG2LKsY/6Pzqbp
yQ0SlOdApppoPlIq9S1VEjQt+/MA0YPrn+tfapCgC78bVojWGmqueXuTBFX8
EsixgVky41L553sk6D2mDBuiyfX3cmufkKCPe0eoNjFHJ/jFn44mQWeGRE5s
Yb53VUx28BMJWiwvK0D0qZHutshYErR8mU2G6C9cZymPJpOg95lv3SU6M7LY
HPeLBG1Nr44mui5wXai/kgTNzaZg2SbWi8jHivAabH1NLrxEazVcvadTT4Iy
ajddJLqLNiiwtoUEvS5MqU70mNf5ldx+EpRLvsiT6L0XRjkfVkhQXtuSOaKL
2Kg0tdZJ0K2jDFtEe+SlTdNtkaCi9LIUO5hpNrdPeu6ToAHmkhxEszx57/Lk
ECnKOFB6g2hhi5orGlykKJX6f/FEG94Urz90gxQttaSBXWJ/YFONyVElRdOf
NCgSfX/Y7MlDDVKUpOiFBtGm1mEnym+SorcpI+4TbeG5beZmRIq+Nup4RbT9
76L99aekaDNjSDHRDs+7mxOfkaK/i5iriXaUW07QeU6K3t973US0c/3pG7/c
SNHHg+cHiXYd9wqz9iVFrc2Sdoj2OaYqOhZDil5rt76wR+yfvWZkIfGkqERl
vwTR72JfdsglkaL9tAhCdKBQ+ovPKaToM+Gm60S/l2eqvp1FimqfAxOiY552
32+uJUUjeSyCiP7dbhZSuE6KjpmPjP67n+T0BdgiRbkrNaeIthQaavi7Q4r2
IdlzRHN63qYpxpGh57pM14j2Eld3L6UhQwsvqlLuY9YNkXxUxUmGbrSb8REt
+nftsDIPGfpcUU6AaJrZX9+qT5OhycLMwkQXXhGaqOEnQ1vTYi4RzbfMY1B/
kQwtCNG9RvSGBu2NFgUy1NpDwYjolhdVU1rKZCivcpwJ0alfPL1ab5ChoWnr
D4g2wuFK2jTIUIrIt9ZEV/1Yley8ja2nQ9+Z6HD6Ab4+GzKUk/ZXMNFSdemk
Ex+w9Ux+KySaPe55XnQEGZo/8KiYaNwzBTvtaGx/esJl/+Kd7hsuiiVDM4+F
V//b73Oq4qhUMjTFiruNaDsBQ1fNEjLUoJxx6t847pwEdTkZ2s3uMPNvvo6V
hcJKMnRsvG3uX/xXbw0F68lQfrJXS0QHdGfiqbrIUImhqO1/+/Om3c2fJ0NH
TLppD4j/j2FHxpNFMvTd4gwd0U/EY60EVsjQ17kbDERLD13uDdskQ1OFyZiJ
rpYwzrMjI0cbRkfYiJ6YyHnGf4IczaFpFCCaW/7BWsg1ctRIL1ae6PD8a9sJ
yuToYISHEtGM4qcPfquRoxW/7twgmvT0EHWXHjlqfWVCg+hx3G12dmss/hu7
O0QbPpPkEbIjR92ltw2I7iCw8CGO5CjDHUcjoqsGWkWM3MnRgs9aZkR/y1e9
mvCeHJ3iDLYh+rS4oNLvSHKUTrjmMdHRKTSqFZ/J0aFDW3ZEv4us1J36So5e
qZJxJPrxMzlLwUJyNCZa35XoS+KXgjInyFFSHRb/f/sryvOIXyRH5cmsgoim
UUGfBW+To+pyiaFED5ncuPeYngL17K6PJLqG0KR1j5UCzegq+Ej07+e6Cmqn
KFCZnx9iiPYJuS8keJkC5ZilSCLanmuSmw2lQH3zPn4h+l7Kf8w01ynQDeBJ
IVq81HFn0oAClaVc+EH04PK76nhPbNzlRw7Ri3zXz1gFUqBS/sN5ROPuULpf
jKJAa66RFBB9qvSlZHE6BXrl7OFioq+d3yCoV1CgKYttZUQ/CHmUPNBLgVIe
M6oi2ntn0tB6iQINzf5ZS/RXEyOWXUpKtCG9voHoOTFNzxMXKVG+TLs2oltr
5oIuK1CiPgGdHUTn3ff+pH2bEn34l7Wb6LcBf7PfvcLG/0j2E61XsN5U+Y0S
HfYZGSKab1ZohqSVEvVg4R0j2j8XEj7uU6IdNNcmiV57o2koJUCFZupQzBB9
V9eEtf0mFer958kc0WW8T1seu1Oh1i4RC//q4cWZqOEWKvTBh40logPa2k20
eKnRkYCkVaKBudZZwJ4aHdovXieaoF0URFpGjXLI2W8S3dRmOfPx5CF08PL8
FtG/bh67KmV7CCXZYt35Fz9IZZGu5BB6N3/rn+PrX38cOUqDVl9K3yW6/vpj
P2dLGnS7TX2P6I3Ku8+PltCgVBON/zwn6J/DyEqLOqBYuyLWT9DftSM2tGif
7pt/nv3p8ka5kBYtIZT/83qzzIlX9IdRl/CtfxYT+zHnYnYYPRJ09uBf/Yae
KnLKP4wyMqn+c1n6qanvdHTo1LjFPx+vP3VkzJAOfdPh/s+Xmh96uX2nQx88
fP/P2u2pu+z7dCihIvGf404mZ77QoUc5AzP/efle7H993+jRrbqif9Yz4nd6
ukOPSurU/PNfox+e9CoMqKVeyz+fRw3wVEkMaF5T9z+HcdGuHRwwoPsHg//8
P/q1UjA=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"dP/dt\"", TraditionalForm], None}, {
        FormBox["\"[S])\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 4}, {0., 0.9999999997671691}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "2", "4", "8", "16"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"n\"", {FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"n\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.681561236839323*^9, 3.6815613128384533`*^9, {3.681561386711853*^9, 
   3.6815614121535378`*^9}, 3.681561986936451*^9, 3.681562191741125*^9}]
}, Open  ]]
},
WindowSize->{1063, 655},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1435, 42, 97, "Input"],
Cell[2018, 66, 66519, 1191, 253, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
